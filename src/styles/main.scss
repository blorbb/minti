@use "./variables.scss";
@use "./duration.scss";
@use "./timer.scss";
@use "./growing_input.scss";
@use "./pages/home.scss";
@use "./icon.scss";
@use "./progress.scss";

:root {
    background: var(--bg);
    color: var(--clr-text);

    font-family: Inter, "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    // from https://utopia.fyi/type/calculator/?c=320,12,1.2,1080,20,1.333,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12
    // can set everything else based on rem/em, don't need the others.
    // also like the relative scale better with rem/ems instead of the given scales.
    font-size: clamp(12px, calc(8.64px + 1.05vmin), 20px);
    line-height: 1.5;

    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;
}

*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html,
body,
.page {
    height: 100dvh;
    overflow: hidden;
}

input,
button {
    font: inherit;
    color: inherit;

    border: none;
    background-color: transparent;
    outline: transparent;
}

button {
    display: inline-grid;
    place-content: center;
}

input:focus-visible,
button:focus-visible {
    outline: var(--outline);
}

// main layout //

.page {
    display: grid;
    grid-template-rows: 1fr 3rem;
}

main {
    overflow: auto;
}

nav {
    display: flex;
    justify-content: space-around;
    align-items: center;
    z-index: 1;
    background-color: var(--clr-neutral-600);

    // TODO make this a mixin?
    .add {
        background-color: var(--clr-green-800);
        color: var(--clr-green-200);

        height: 1lh;
        aspect-ratio: 3;
        border-radius: 1lh;

        transition-property: color background-color;
        transition-duration: var(--time-transition);

        &:hover {
            background-color: var(--clr-green-700);
            color: var(--clr-green-100);
        }

        &:active {
            background-color: var(--clr-green-400);
            color: var(--clr-green-800);
        }
    }

    .remove {
        background-color: var(--clr-red-800);
        color: var(--clr-red-200);

        height: 1lh;
        aspect-ratio: 3;
        border-radius: 1lh;

        transition-property: color background-color;
        transition-duration: var(--time-transition);

        &:hover {
            background-color: var(--clr-red-700);
            color: var(--clr-red-100);
        }

        &:active {
            background-color: var(--clr-red-400);
            color: var(--clr-red-800);
        }
    }
}
