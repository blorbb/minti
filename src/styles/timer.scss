@use "functions" as f;

.com-timer {
    position: relative;
    isolation: isolate;

    display: grid;

    background-color: var(--clr-neutral-400);
    padding: 1rem;

    container-type: inline-size;

    .timer-face {
        position: relative;
        inset: 0;

        display: flex;
        flex-direction: column;
        gap: 1em;
        justify-content: center;

        // has to be on here for cq units to work
        font-size: var(--font-size-cq);
        padding: 1em;

        // default: blur appearance
        // PERF: ~20% more gpu than opaque background
        background-color: f.scale-alpha(var(--clr-neutral-400), 90%);
        // PERF: ~3x more gpu and 2x cpu
        backdrop-filter: blur(10px);
        // creates new painting layer, seem to slightly improve perf
        transform: translateZ(0);

        body[data-timer-face-appearance="transparent"] & {
            background-color: f.scale-alpha(var(--clr-neutral-400), 90%);
            backdrop-filter: none;
        }

        body[data-timer-face-appearance="opaque"] & {
            background-color: var(--clr-neutral-400);
            backdrop-filter: none;
        }

        box-shadow: var(--shadow-1);

        // PERF: ~4x less gpu when finished
        @include f.on-outer-most('[data-finished="true"]') {
            backdrop-filter: none;
        }
    }

    input {
        text-align: center;
    }

    .heading {
        text-align: center;

        .title {
            color: var(--clr-text-secondary);
        }

        .error {
            color: var(--clr-error);
        }

        .end {
            color: var(--clr-orange-400);
        }
    }

    .duration {
        display: block;
        text-align: center;
        font-size: 2em;
        font-weight: 600;
        height: 1lh; // screen shifts by 1px when typing/resetting if this isn't here

        @include f.on-outer-most('[data-paused="true"]') {
            color: var(--clr-neutral-100);
        }

        @include f.on-outer-most('[data-finished="true"]') {
            animation: flash 400ms steps(1, end) forwards;
        }

        input {
            background-color: var(--clr-overlay-2);
            width: 12em;
        }
    }

    button {
        animation: scale-in var(--time-transition-short) ease-out;
        // scales size via font-size
        transition-property: all;
    }

    .controls {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1em;

        button {
            height: 2em;
            border-radius: 2em;
        }

        button.primary {
            aspect-ratio: 3;
        }

        button.light {
            aspect-ratio: 2;
        }
    }

    button.delete {
        position: absolute;
        top: 0;
        right: 0;
        width: 2em;
        aspect-ratio: 1;
    }

    button.com-fullscreen-button {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 2em;
        aspect-ratio: 1;
    }
}

@keyframes scale-in {
    from {
        scale: 0;
    }

    to {
        scale: 1;
    }
}

@keyframes flash {
    0%,
    50%,
    100% {
        color: var(--clr-red-400);
    }

    25%,
    75% {
        color: var(--clr-text);
    }
}
